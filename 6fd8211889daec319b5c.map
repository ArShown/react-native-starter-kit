{"version":3,"sources":["/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-1/tab-a.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-1/tab-b.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-1/index.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-2/demo-a.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-2/demo-b.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-2/index.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-3/index.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/main.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/store/middleware/multiple-actions.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/store/middleware/promise.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/reducer/index.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/reducer/_reducer-creator.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/reducer/foobar.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/store/index.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/App.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/web-build/register-service-worker.js"],"names":["TabA","navigation","View","style","flex","alignItems","justifyContent","Text","TabB","Tab","createMaterialTopTabNavigator","Link1","insets","useSafeArea","Navigator","paddingTop","top","backgroundColor","Screen","name","component","styles","StyleSheet","create","container","DemoA","Button","title","onPress","push","navigate","goBack","popToTop","DemoB","Stack","createStackNavigator","Link2","Link3","createBottomTabNavigator","loadResourcesAsync","a","async","Promise","all","handleLoadingError","error","console","warn","Main","useState","isLoadingComplete","setLoadingComplete","NavigationContainer","AppLoading","startAsync","onError","onFinish","multipleActionMiddleware","store","next","action","Array","isArray","filter","item","Object","type","map","dispatch","promiseMiddleware","then","resolve","reducerObject","foobar","initState","actionMaps","state","payload","has","reducerCreator","createStore","combineReducers","rootReducer","applyMiddleware","multipleActionsMiddleware","App","props","navigator","window","addEventListener","serviceWorker","register","scope","info","catch"],"mappings":"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","file":"static/js/app.3619c211.chunk.js","sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\n\nfunction TabA({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Tab A Screen</Text>\n    </View>\n  );\n}\n\nexport default TabA;\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nfunction TabB({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Tab B Screen</Text>\n    </View>\n  );\n}\n\nexport default TabB;\n","import React from 'react';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport TabA from './tab-a';\nimport TabB from './tab-b';\n\nconst Tab = createMaterialTopTabNavigator();\n\nconst Link1 = () => {\n  const insets = useSafeArea();\n  return (\n    <Tab.Navigator style={{ paddingTop: insets.top, backgroundColor: '#fff' }}>\n      <Tab.Screen name=\"Tab-A\" component={TabA} />\n      <Tab.Screen name=\"Tab-B\" component={TabB} />\n    </Tab.Navigator>\n  );\n};\n\nexport default Link1;\n","import React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nfunction DemoA({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text>Demo A Screen</Text>\n      <Button\n        title=\"Go to Demo A... again\"\n        onPress={() => navigation.push('DemoA')}\n      />\n      <Button\n        title=\"Go to DemoB\"\n        onPress={() => navigation.navigate('DemoB')}\n      />\n      <Button title=\"Go back\" onPress={() => navigation.goBack()} />\n      <Button\n        title=\"Go back to first screen in this stack\"\n        onPress={() => navigation.popToTop()}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, alignItems: 'center', justifyContent: 'center' }\n});\n\nexport default DemoA;\n","import React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nfunction DemoB({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text>Demo B Screen</Text>\n      <Button\n        title=\"Go to Demo B... again\"\n        onPress={() => navigation.push('DemoB')}\n      />\n      <Button\n        title=\"Go to DemoA\"\n        onPress={() => navigation.navigate('DemoA')}\n      />\n      <Button title=\"Go back\" onPress={() => navigation.goBack()} />\n      <Button\n        title=\"Go back to first screen in this stack\"\n        onPress={() => navigation.popToTop()}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, alignItems: 'center', justifyContent: 'center' }\n});\n\nexport default DemoB;\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport DemoA from './demo-a';\nimport DemoB from './demo-b';\n\nconst Stack = createStackNavigator();\n\nfunction Link2() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"DemoA\" component={DemoA} />\n      <Stack.Screen name=\"DemoB\" component={DemoB} />\n    </Stack.Navigator>\n  );\n}\n\nexport default Link2;\n","import React from 'react';\nimport { Text, View } from 'react-native';\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nfunction Link3() {\n  const insets = useSafeArea();\n  return (\n    <View\n      style={{\n        paddingTop: insets.top,\n        flex: 1,\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      }}\n    >\n      <Text>This is top text.</Text>\n      <Text>demo with react-native-safe-area-context</Text>\n      <Text>This is bottom text.</Text>\n    </View>\n  );\n}\n\nexport default Link3;\n","import React, { useState } from 'react';\nimport { AppLoading } from 'expo';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Link1 from './link-1';\nimport Link2 from './link-2';\nimport Link3 from './link-3';\n\nconst Tab = createBottomTabNavigator();\n\nconst Main = () => {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n  const finishHandler = () => {\n    setLoadingComplete(true);\n  };\n\n  if (!isLoadingComplete) {\n    return (\n      <AppLoading\n        startAsync={loadResourcesAsync}\n        onError={handleLoadingError}\n        onFinish={finishHandler}\n      />\n    );\n  }\n\n  return (\n    <NavigationContainer>\n      <Tab.Navigator>\n        <Tab.Screen name=\"Link1\" component={Link1} />\n        <Tab.Screen name=\"Link2\" component={Link2} />\n        <Tab.Screen name=\"Link3\" component={Link3} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n};\n\n/* 準備資源 */\nconst loadResourcesAsync = async function() {\n  await Promise.all([]);\n};\n\nfunction handleLoadingError(error) {\n  // In this case, you might want to report the error to your error reporting\n  // service, for example Sentry\n  console.warn(error);\n}\n\nexport default Main;\n","const multipleActionMiddleware = store => next => action => {\n  if (Array.isArray(action))\n    return action\n      .filter(item => item instanceof Object && item.type)\n      .map(store.dispatch);\n  else return next(action);\n};\n\nexport default multipleActionMiddleware;\n","const promiseMiddleware = store => next => action => {\n  if (typeof action.then !== 'function') {\n    return next(action);\n  }\n  return Promise.resolve(action).then(store.dispatch);\n};\n\nexport default promiseMiddleware;\n","import foobar from './foobar';\n\nconst reducerObject = { foobar };\n\nexport default reducerObject;\n","import { has } from 'ramda';\n\nconst reducerCreator = (initState, actionMaps) => (\n  state = initState,\n  { type, payload }\n) => (has(type)(actionMaps) ? actionMaps[type](state, payload) : state);\n\nexport default reducerCreator;\n","/* @flow */\nimport reducerCreator from './_reducer-creator';\n\n/* action type */\nexport const FOO = 'foo';\nexport const BAR = 'bar';\n\nexport const defaultState = 'foo';\n\nexport default reducerCreator(defaultState, {\n  [FOO]: () => FOO,\n  [BAR]: () => BAR\n});\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport multipleActionsMiddleware from './middleware/multiple-actions';\nimport promiseMiddleware from './middleware/promise';\nimport rootReducer from '../reducer';\n\nconst store = createStore(\n  combineReducers(rootReducer),\n  applyMiddleware(multipleActionsMiddleware, promiseMiddleware)\n);\n\nexport default store;\n","import 'react-native-gesture-handler';\nimport React from 'react';\nimport Main from './source/screens/main';\nimport { Provider } from 'react-redux';\nimport store from './source/storage/store';\n\nexport default function App(props) {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/react-native-starter-kit/expo-service-worker.js', { scope: '/react-native-starter-kit/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}