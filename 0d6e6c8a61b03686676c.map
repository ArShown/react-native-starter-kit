{"version":3,"sources":["/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-1/tab-a.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-1/tab-b.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-1/index.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-2/demo-a.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-2/demo-b.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-2/index.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-3/modal-content.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-3/modal.web.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/link-3/index.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/screens/main.jsx","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/store/middleware/multiple-actions.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/store/middleware/promise.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/reducer/index.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/reducer/_reducer-creator.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/reducer/foobar.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/source/storage/store/index.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/App.js","/home/runner/work/react-native-starter-kit/react-native-starter-kit/web-build/register-service-worker.js"],"names":["TabA","navigation","View","style","flex","alignItems","justifyContent","Text","TabB","Tab","createMaterialTopTabNavigator","Link1","tabWidth","Dimensions","get","width","Navigator","tabBarOptions","scrollEnabled","tabStyle","indicatorStyle","Platform","OS","backgroundColor","Screen","name","component","styles","StyleSheet","create","container","DemoA","Button","title","onPress","push","navigate","goBack","DemoB","popToTop","Stack","createStackNavigator","Link2","insets","useSafeArea","headerHeight","useHeaderHeight","screenOptions","headerTitleAlign","headerStyle","height","top","headerTitleContainerStyle","marginTop","headerLeftContainerStyle","headerRightContainerStyle","ModelContent","closeHandler","SafeAreaView","TouchableHighlight","position","right","Model","visible","animationType","transparent","ariaHideApp","onShow","console","log","onDismiss","Link3","useState","modalVisible","setModalVisible","createBottomTabNavigator","TabIcon","color","size","Ionicons","marginBottom","loadResourcesAsync","a","async","Promise","all","handleLoadingError","error","warn","Main","isLoadingComplete","setLoadingComplete","NavigationContainer","headerTitleStyle","props","options","tabBarIcon","AppLoading","startAsync","onError","onFinish","multipleActionMiddleware","store","next","action","Array","isArray","filter","item","Object","type","map","dispatch","promiseMiddleware","then","resolve","reducerObject","foobar","initState","actionMaps","state","payload","has","reducerCreator","createStore","combineReducers","rootReducer","applyMiddleware","multipleActionsMiddleware","App","navigator","window","addEventListener","serviceWorker","register","scope","info","catch"],"mappings":"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","file":"static/js/app.4ff0392a.chunk.js","sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\n\nfunction TabA({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Tab A Screen</Text>\n    </View>\n  );\n}\n\nexport default TabA;\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nfunction TabB({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Tab B Screen</Text>\n    </View>\n  );\n}\n\nexport default TabB;\n","import React from 'react';\nimport { Dimensions, Platform } from 'react-native';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport TabA from './tab-a';\nimport TabB from './tab-b';\n\nconst Tab = createMaterialTopTabNavigator();\n\nconst Link1 = () => {\n  const width = Dimensions.get('window').width;\n  const tabWidth = width / 4;\n  return (\n    <Tab.Navigator\n      tabBarOptions={{\n        scrollEnabled: true,\n        tabStyle: {\n          width: tabWidth\n        },\n        /* 底線(line at the bottom of the tab) */\n        indicatorStyle: {\n          width: Platform.OS === 'web' ? 0 : tabWidth\n        }\n      }}\n      style={{ backgroundColor: '#fff' }}\n    >\n      <Tab.Screen name=\"Tab-A-I\" component={TabA} />\n      <Tab.Screen name=\"Tab-B-I\" component={TabB} />\n      <Tab.Screen name=\"Tab-A-II\" component={TabA} />\n      <Tab.Screen name=\"Tab-B-II\" component={TabB} />\n      <Tab.Screen name=\"Tab-A-III\" component={TabA} />\n      <Tab.Screen name=\"Tab-B-III\" component={TabB} />\n    </Tab.Navigator>\n  );\n};\n\nexport default Link1;\n","import React from 'react';\nimport { StyleSheet, Text, View, Button, SafeAreaView } from 'react-native';\n\nfunction DemoA({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text>Demo A Screen</Text>\n      <Button\n        title=\"Go to Demo A... again\"\n        onPress={() => navigation.push('DemoA')}\n      />\n      <Button\n        title=\"Go to DemoB\"\n        onPress={() => navigation.navigate('DemoB')}\n      />\n      <Button title=\"Go back\" onPress={() => navigation.goBack()} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, alignItems: 'center', justifyContent: 'center' }\n});\n\nexport default DemoA;\n","import React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nfunction DemoB({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text>Demo B Screen</Text>\n      <Button\n        title=\"Go to Demo B... again\"\n        onPress={() => navigation.push('DemoB')}\n      />\n      <Button\n        title=\"Go to DemoA\"\n        onPress={() => navigation.navigate('DemoA')}\n      />\n      <Button title=\"Go back\" onPress={() => navigation.goBack()} />\n      <Button\n        title=\"Go back to first screen in this stack\"\n        onPress={() => navigation.popToTop()}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, alignItems: 'center', justifyContent: 'center' }\n});\n\nexport default DemoB;\n","import React from 'react';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport { createStackNavigator, useHeaderHeight } from '@react-navigation/stack';\nimport DemoA from './demo-a';\nimport DemoB from './demo-b';\n\nconst Stack = createStackNavigator();\n\nfunction Link2() {\n  const insets = useSafeArea();\n  const headerHeight = useHeaderHeight();\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerTitleAlign: 'center',\n        headerStyle: {\n          height: headerHeight - insets.top + 10\n        },\n        headerTitleContainerStyle: {\n          marginTop: insets.top * -1\n        },\n        headerLeftContainerStyle: {\n          marginTop: insets.top * -1\n        },\n        headerRightContainerStyle: {\n          marginTop: insets.top * -1\n        }\n      }}\n    >\n      <Stack.Screen name=\"DemoA\" component={DemoA} />\n      <Stack.Screen name=\"DemoB\" component={DemoB} />\n    </Stack.Navigator>\n  );\n}\n\nexport default Link2;\n","import React from 'react';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport { Text, TouchableHighlight, View, SafeAreaView } from 'react-native';\n\nfunction ModelContent({ closeHandler }) {\n  const insets = useSafeArea();\n  return (\n    <SafeAreaView\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}\n    >\n      <TouchableHighlight\n        style={{\n          position: 'absolute',\n          right: insets.right + 10,\n          top: insets.top + 10\n        }}\n        onPress={closeHandler}\n      >\n        <Text>Close</Text>\n      </TouchableHighlight>\n      <Text>Hello World!</Text>\n    </SafeAreaView>\n  );\n}\n\nexport default ModelContent;\n","import React from 'react';\nimport { View, Alert } from 'react-native';\n/* https://github.com/Dekoruma/react-native-web-modal */\nimport Modal from 'modal-react-native-web';\nimport Content from './modal-content';\n\nfunction Model({ visible, closeHandler }) {\n  return (\n    <Modal\n      animationType=\"slide\"\n      transparent={false}\n      visible={visible}\n      ariaHideApp={false}\n      onShow={() => {\n        console.log('Modal has been shown.');\n      }}\n      onDismiss={() => {\n        console.log('Modal has been closed.');\n      }}\n    >\n      <Content closeHandler={closeHandler} />\n    </Modal>\n  );\n}\n\nexport default Model;\n","import React, { useState } from 'react';\nimport { Text, TouchableHighlight, View, SafeAreaView } from 'react-native';\nimport Modal from './modal';\n\nfunction Link3() {\n  const [modalVisible, setModalVisible] = useState(false);\n  const closeHandler = () => {\n    setModalVisible(false);\n  };\n  return (\n    <SafeAreaView\n      style={{\n        flex: 1,\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      }}\n    >\n      <Text>This is top text.</Text>\n      <Text>demo with react-native-safe-area-context</Text>\n      <TouchableHighlight\n        onPress={() => {\n          setModalVisible(true);\n        }}\n      >\n        <Text>Show Modal</Text>\n      </TouchableHighlight>\n      <Text>This is bottom text.</Text>\n      {/* modal */}\n      <Modal visible={modalVisible} closeHandler={closeHandler} />\n    </SafeAreaView>\n  );\n}\n\nexport default Link3;\n","import React, { useState } from 'react';\nimport { Platform } from 'react-native';\nimport { AppLoading } from 'expo';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Link1 from './link-1';\nimport Link2 from './link-2';\nimport Link3 from './link-3';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nconst TabIcon = ({ color, size }) => (\n  <Ionicons\n    name={Platform.OS === 'ios' ? 'ios-link' : 'md-link'}\n    size={size}\n    style={{ marginBottom: -3 }}\n    color={color}\n  />\n);\n\nconst Main = () => {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n  const finishHandler = () => {\n    setLoadingComplete(true);\n  };\n\n  if (!isLoadingComplete) {\n    return (\n      <AppLoading\n        startAsync={loadResourcesAsync}\n        onError={handleLoadingError}\n        onFinish={finishHandler}\n      />\n    );\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerTitleAlign: 'center',\n          headerStyle: { backgroundColor: '#fbfbfb' },\n          headerTitleStyle: { color: '#333333' }\n        }}\n      >\n        <Stack.Screen name=\"Header\">\n          {props => (\n            <Tab.Navigator>\n              <Tab.Screen\n                name=\"Link1\"\n                component={Link1}\n                options={{ tabBarIcon: TabIcon }}\n              />\n              <Tab.Screen\n                name=\"Link2\"\n                component={Link2}\n                options={{ tabBarIcon: TabIcon }}\n              />\n              <Tab.Screen\n                name=\"Link3\"\n                component={Link3}\n                options={{ tabBarIcon: TabIcon }}\n              />\n            </Tab.Navigator>\n          )}\n        </Stack.Screen>\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\n/* 準備資源 */\nconst loadResourcesAsync = async function() {\n  await Promise.all([]);\n};\n\nfunction handleLoadingError(error) {\n  // In this case, you might want to report the error to your error reporting\n  // service, for example Sentry\n  console.warn(error);\n}\n\nexport default Main;\n","const multipleActionMiddleware = store => next => action => {\n  if (Array.isArray(action))\n    return action\n      .filter(item => item instanceof Object && item.type)\n      .map(store.dispatch);\n  else return next(action);\n};\n\nexport default multipleActionMiddleware;\n","const promiseMiddleware = store => next => action => {\n  if (typeof action.then !== 'function') {\n    return next(action);\n  }\n  return Promise.resolve(action).then(store.dispatch);\n};\n\nexport default promiseMiddleware;\n","import foobar from './foobar';\n\nconst reducerObject = { foobar };\n\nexport default reducerObject;\n","import { has } from 'ramda';\n\nconst reducerCreator = (initState, actionMaps) => (\n  state = initState,\n  { type, payload }\n) => (has(type)(actionMaps) ? actionMaps[type](state, payload) : state);\n\nexport default reducerCreator;\n","/* @flow */\nimport reducerCreator from './_reducer-creator';\n\n/* action type */\nexport const FOO = 'foo';\nexport const BAR = 'bar';\n\nexport const defaultState = 'foo';\n\nexport default reducerCreator(defaultState, {\n  [FOO]: () => FOO,\n  [BAR]: () => BAR\n});\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport multipleActionsMiddleware from './middleware/multiple-actions';\nimport promiseMiddleware from './middleware/promise';\nimport rootReducer from '../reducer';\n\nconst store = createStore(\n  combineReducers(rootReducer),\n  applyMiddleware(multipleActionsMiddleware, promiseMiddleware)\n);\n\nexport default store;\n","import 'react-native-gesture-handler';\nimport React from 'react';\nimport Main from './source/screens/main';\nimport { Provider } from 'react-redux';\nimport store from './source/storage/store';\n\nexport default function App(props) {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/react-native-starter-kit/expo-service-worker.js', { scope: '/react-native-starter-kit/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}